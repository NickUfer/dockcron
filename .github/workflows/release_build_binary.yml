name: Release - Build Binary

on:
  workflow_call:
    inputs:
      tag:
        required: false
        type: string
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g., v0.1.0)"
        required: false
        type: string

permissions:
  contents: write

env:
  RUST_VERSION: "1.90.0"

jobs:
  build-binary:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - arch: amd64
            rust_target: x86_64-unknown-linux-gnu
          - arch: arm64
            rust_target: aarch64-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag || github.ref }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Add Rust target
        run: rustup target add ${{ matrix.target.rust_target }}

      - name: Install cargo-zigbuild
        run: pip install cargo-zigbuild

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target.rust_target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target.rust_target }}-
            ${{ runner.os }}-cargo-

      - name: Build release binary
        run: cargo zigbuild --locked --release --target ${{ matrix.target.rust_target }}

      - name: Rename binary
        run: |
          cp target/${{ matrix.target.rust_target }}/release/dockcron dockcron-linux-${{ matrix.target.arch }}

      - name: Upload binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: dockcron-linux-${{ matrix.target.arch }}
          tag_name: ${{ inputs.tag || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}